{"version":3,"sources":["components/TodoInsert/TodoInsert.tsx","components/Footer/Footer.tsx","components/TodoListItem/TodoListItem.tsx","components/TodoList/TodoList.tsx","components/TodoTemplate/TodoTemplate.tsx","App.tsx","index.tsx"],"names":["TodoInsert","onInsert","useState","text","setText","onChange","useCallback","e","target","value","onSubmit","preventDefault","className","type","placeholder","Footer","todos","handleStatus","onRemoveCompleted","filter","todo","done","length","onClick","TodoListItem","onToggle","onRemove","visible","setVisible","handleVisible","onMouseOver","onMouseOut","checked","id","readOnly","onMouseEnter","TodoList","status","setStatus","map","TodoTemplate","children","App","store","localStorage","getItem","JSON","parse","getStore","setTodos","useRef","useEffect","setItem","stringify","current","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee24497b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useCallback } from 'react';\r\nimport './TodoInsert.css';\r\n\r\ntype TodoInsertProps = {\r\n  onInsert: (text: string) => void;\r\n};\r\n\r\nfunction TodoInsert({ onInsert }: TodoInsertProps) {\r\n  const [text, setText] = useState('');\r\n\r\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = useCallback((e) => {\r\n    setText(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit: React.FormEventHandler<HTMLFormElement> = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n\r\n      onInsert(text);\r\n      setText('');\r\n    },\r\n    [onInsert, text],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"Todo-form\" onSubmit={onSubmit}>\r\n        <input className=\"form-input\" type=\"text\" placeholder=\"Ìï† ÏùºÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî\" value={text} onChange={onChange} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoInsert;\r\n","import React from 'react'\r\nimport { Todo } from '../TodoList/TodoList'\r\n\r\ntype FooterProps = {\r\n    todos: Todo[],\r\n    handleStatus: (status:string)=>void,\r\n    onRemoveCompleted: ()=> void\r\n}\r\n\r\nfunction Footer({todos, handleStatus, onRemoveCompleted}:FooterProps) {\r\n    return (\r\n        <div className=\"footer\">\r\n          <p className=\"footer-left\">{todos.filter((todo) => !todo.done).length} item left</p>\r\n          <div className=\"footer-right\">\r\n            <button className=\"footer-btn all\" onClick={() => handleStatus('all')}>\r\n              All\r\n            </button>\r\n            <button className=\"footer-btn active\" onClick={() => handleStatus('active')}>\r\n              Active\r\n            </button>\r\n            <button className=\"footer-btn completed\" onClick={() => handleStatus('completed')}>\r\n              Completed\r\n            </button>\r\n          </div>\r\n          <button onClick={onRemoveCompleted}>Clear completed</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Todo } from '../TodoList/TodoList';\r\nimport './TodoListItem.css';\r\n\r\ntype TodoListItemProps = {\r\n  todo: Todo;\r\n  onToggle: (id: number) => void;\r\n  onRemove: (id: number) => void;\r\n};\r\n\r\nfunction TodoListItem({ todo, onToggle, onRemove }: TodoListItemProps) {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const handleVisible = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleInvisible = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Todo-item\" onMouseOver={handleVisible} onMouseOut={handleInvisible}>\r\n      <div className={todo.done ? 'done list' : 'list'}>\r\n        <input className=\"checkbox\" type=\"checkbox\" checked={todo.done} onChange={() => onToggle(todo.id)} readOnly />\r\n        <input className={todo.done ? 'done text' : 'text'} key={todo.id} readOnly value={todo.text} />\r\n      </div>\r\n      {visible && (\r\n        <button className=\"delete\" onClick={() => onRemove(todo.id)} onMouseEnter={handleVisible}>\r\n          ÏÇ≠Ï†ú\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoListItem;\r\n","import React, { useState } from 'react';\r\nimport Footer from '../Footer/Footer';\r\nimport TodoListItem from '../TodoListItem/TodoListItem';\r\nimport './TodoList.css';\r\n\r\nexport type TodoListProps = {\r\n  todos: Todo[];\r\n  onToggle: (id: number) => void;\r\n  onRemove: (id: number) => void;\r\n  onRemoveCompleted: () => void;\r\n};\r\n\r\nexport type Todo = {\r\n  id: number;\r\n  text: string;\r\n  done: boolean;\r\n};\r\n\r\nfunction TodoList({ todos, onToggle, onRemove, onRemoveCompleted }: TodoListProps) {\r\n  // ÏôÑÎ£å Î™©Î°ù Î≥¥Í∏∞, ÎØ∏ÏôÑÎ£å Î™©Î°ùÎ≥¥Í∏∞ , Ï†ÑÏ≤¥ Î≥¥Í∏∞\r\n  // doneÏùÑ Í∏∞Ï§ÄÏúºÎ°ú Ï≤¥ÌÇπ\r\n  const [status, setStatus] = useState('all');\r\n\r\n  const handleStatus = (status: string) => {\r\n    setStatus(status);\r\n  };\r\n\r\n  return (\r\n    <div className=\"TodoList\">\r\n      <div>\r\n        {status === 'all' &&\r\n          todos.map((todo) => <TodoListItem key={todo.id} todo={todo} onToggle={onToggle} onRemove={onRemove} />)}\r\n        {status === 'active' &&\r\n          todos.map(\r\n            (todo) => !todo.done && <TodoListItem key={todo.id} todo={todo} onToggle={onToggle} onRemove={onRemove} />,\r\n          )}\r\n        {status === 'completed' &&\r\n          todos.map(\r\n            (todo) => todo.done && <TodoListItem key={todo.id} todo={todo} onToggle={onToggle} onRemove={onRemove} />,\r\n          )}\r\n      </div>\r\n      {todos.length > 0 && (\r\n        <Footer todos={todos} handleStatus={handleStatus} onRemoveCompleted={onRemoveCompleted}/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport './TodoTemplate.css';\r\n\r\ntype TodoTemplateProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction TodoTemplate({ children }: TodoTemplateProps) {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"TodoTemplate\">\r\n        <div className=\"head\"></div>\r\n        <h1 className=\"Todo-title\">üìù TODO LIST</h1>\r\n        <div className=\"content\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoTemplate;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport TodoInsert from './components/TodoInsert/TodoInsert';\r\nimport TodoList, { Todo } from './components/TodoList/TodoList';\r\nimport TodoTemplate from './components/TodoTemplate/TodoTemplate';\r\n\r\nconst getStore = () => {\r\n  let store = localStorage.getItem(\"todos\");\r\n  return (store && JSON.parse(store)) || [];\r\n}\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState<Todo[] | []>(getStore());\r\n  \r\n  const id = useRef(1);\r\n\r\n  const onInsert = (text: string): void => {\r\n    const todo = {\r\n      id: id.current,\r\n      text,\r\n      done: false,\r\n    };\r\n    setTodos([...todos, todo]);\r\n    id.current++;\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  };\r\n\r\n  const onToggle = (id: number) => {\r\n    setTodos(todos.map((todo) => (todo.id === id ? { ...todo, done: !todo.done } : todo)));\r\n  };\r\n\r\n  const onRemove = (id: number) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const onRemoveCompleted = () => {\r\n    setTodos(todos.filter((todo) => todo.done === false));\r\n  };\r\n\r\n\r\n  useEffect(()=>{\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  },[todos])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <TodoTemplate>\r\n      <TodoInsert onInsert={onInsert} />\r\n      <TodoList todos={todos} onToggle={onToggle} onRemove={onRemove} onRemoveCompleted={onRemoveCompleted} />\r\n    </TodoTemplate>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}